$date
	Tue Aug 12 19:37:48 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module top $end
$var wire 1 ! waiting $end
$var wire 1 " incorrect $end
$var wire 1 # correct $end
$var wire 1 $ bug $end
$var parameter 8 % passkey $end
$var reg 1 & clk $end
$var reg 4 ' digits [3:0] $end
$var reg 1 ( reset $end
$var reg 1 ) submit $end
$scope function decode $end
$upscope $end
$scope function encode $end
$upscope $end
$scope module debitpin $end
$var wire 1 & clk $end
$var wire 4 * digit_switches [3:0] $end
$var wire 1 ( reset $end
$var wire 1 ) submit $end
$var wire 1 ! waiting $end
$var wire 1 " incorrect $end
$var wire 2 + digit [1:0] $end
$var wire 1 # correct $end
$var wire 1 $ bug $end
$var parameter 8 , passkey $end
$scope module pinchk $end
$var wire 1 & clk $end
$var wire 1 ( reset $end
$var wire 1 ) submit $end
$var wire 1 - right_wrong_out $end
$var wire 2 . digit [1:0] $end
$var parameter 8 / passkey $end
$var reg 1 $ bug $end
$var reg 1 # correct $end
$var reg 3 0 dig_count [2:0] $end
$var reg 2 1 digit_stw [1:0] $end
$var reg 1 2 firstDigit $end
$var reg 1 " incorrect $end
$var reg 8 3 password [7:0] $end
$var reg 1 4 right_wrong_in $end
$var reg 1 5 secondDigit $end
$var reg 3 6 state [2:0] $end
$var reg 1 7 verify $end
$var reg 1 ! waiting $end
$scope module holdLED $end
$var wire 1 & clk $end
$var wire 1 4 reset $end
$var parameter 32 8 length $end
$var reg 1 - LED $end
$var reg 28 9 counter [27:0] $end
$upscope $end
$upscope $end
$scope module priority_enc $end
$var wire 4 : in [3:0] $end
$var reg 2 ; out [1:0] $end
$upscope $end
$upscope $end
$scope task DigitSubmission $end
$var reg 16 < password [15:0] $end
$scope begin $unm_blk_28 $end
$var reg 4 = digit [3:0] $end
$upscope $end
$upscope $end
$scope task PasswordVerification $end
$scope begin $unm_blk_30 $end
$var reg 16 > password [15:0] $end
$scope begin $unm_blk_31 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module top $end
$scope module debitpin $end
$scope module pinchk $end
$scope module holdLED $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1110111001101011001010000000 8
b10100101 /
b10100101 ,
b10100101 %
$end
#0
$dumpvars
bx >
b0 =
bx <
bx ;
bx :
bx 9
x7
bx 6
x5
x4
bx 3
x2
bx 1
bx 0
bx .
x-
bx +
bx *
x)
x(
bx '
0&
x$
x#
x"
x!
$end
#5
1$
0-
1&
#10
1$
0"
0#
b0 6
1(
0&
#15
0$
1!
07
b0 0
b0 3
1&
#20
b100010000100010 >
0(
0&
#25
b10 +
b10 .
b10 ;
b100001000100000 >
b100 '
b100 *
b100 :
1&
#30
0&
#35
b10 1
12
1)
1&
#40
0)
0&
#45
02
15
b1 3
1&
#50
0&
#55
b1 6
b1 0
05
b10 3
1&
#60
0&
#65
b10001000000000 >
1&
#70
0&
#75
12
1)
1&
#80
0)
0&
#85
02
15
b101 3
1&
#90
0&
#95
b10 0
05
b1010 3
1&
#100
0&
#105
b1 +
b1 .
b1 ;
b10000000000000 >
b10 '
b10 *
b10 :
1&
#110
0&
#115
b1 1
12
1)
1&
#120
0)
0&
#125
02
15
b10100 3
1&
#130
0&
#135
b11 0
05
b101001 3
1&
#140
0&
#145
b0 >
1&
#150
0&
#155
12
1)
1&
#160
0)
0&
#165
02
15
b1010010 3
1&
#170
0&
#175
b100 0
05
b10100101 3
1&
#180
0&
#185
b0 0
17
0!
b10 6
1&
#190
0&
#195
07
b11 6
1&
#200
0&
#205
b101 6
1#
14
1&
#210
0&
