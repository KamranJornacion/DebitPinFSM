$date
	Fri Aug 08 16:48:44 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module top $end
$var wire 1 ! waiting $end
$var wire 1 " incorrect $end
$var wire 1 # correct $end
$var wire 1 $ bug $end
$var parameter 4 % passkey $end
$var reg 1 & clk $end
$var reg 4 ' digits [3:0] $end
$var reg 1 ( reset $end
$var reg 1 ) submit $end
$scope module debitpin $end
$var wire 1 & clk $end
$var wire 4 * digit_switches [3:0] $end
$var wire 1 ( reset $end
$var wire 1 ) submit $end
$var wire 1 ! waiting $end
$var wire 1 " incorrect $end
$var wire 2 + digit [1:0] $end
$var wire 1 # correct $end
$var wire 1 $ bug $end
$var parameter 4 , passkey $end
$scope module pinchk $end
$var wire 1 & clk $end
$var wire 1 ( reset $end
$var wire 1 ) submit $end
$var wire 1 - right_wrong_out $end
$var wire 2 . digit [1:0] $end
$var parameter 4 / passkey $end
$var reg 1 $ bug $end
$var reg 1 # correct $end
$var reg 3 0 dig_count [2:0] $end
$var reg 1 1 firstDigit $end
$var reg 1 " incorrect $end
$var reg 8 2 password [7:0] $end
$var reg 1 3 right_wrong_in $end
$var reg 1 4 secondDigit $end
$var reg 3 5 state [2:0] $end
$var reg 1 6 update $end
$var reg 1 7 verify $end
$var reg 1 ! waiting $end
$scope module holdLED $end
$var wire 1 & clk $end
$var wire 1 3 reset $end
$var parameter 32 8 length $end
$var reg 1 - LED $end
$var reg 28 9 counter [27:0] $end
$upscope $end
$upscope $end
$scope module priority_enc $end
$var wire 4 : in [3:0] $end
$var reg 2 ; out [1:0] $end
$upscope $end
$upscope $end
$scope task DigitSubmission $end
$var reg 16 < password [15:0] $end
$scope begin $unm_blk_29 $end
$var reg 4 = digit [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module top $end
$scope module debitpin $end
$scope module pinchk $end
$scope module holdLED $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1110111001101011001010000000 8
b1010 /
b1010 ,
b1010 %
$end
#0
$dumpvars
b0 =
bx <
bx ;
bx :
bx 9
x7
x6
bx 5
x4
x3
bx 2
x1
bx 0
bx .
x-
bx +
bx *
x)
x(
bx '
0&
x$
x#
x"
x!
$end
#5
1$
0-
1&
#10
1$
0"
0#
b0 5
1(
0&
#15
0$
b0 5
1!
07
b0 0
06
b0 2
1&
#20
b1 +
b1 .
b1 ;
b10 '
b10 *
b10 :
b10 =
b10 <
0(
0&
#25
11
1)
1&
#30
b10 +
b10 .
b10 ;
b100 '
b100 *
b100 :
b100100 <
b100 =
0)
0&
#35
01
14
b1 2
1)
1&
#40
b11 +
b11 .
b11 ;
b1000 '
b1000 *
b1000 :
b1001001000 <
b1000 =
0)
0&
#45
16
b1 0
04
b11 2
1)
1&
#50
b10010010001000 <
0)
0&
#55
b1 5
11
1)
1&
#60
b1 +
b1 .
b1 ;
b10 '
b10 *
b10 :
b10 =
b10 <
0)
0&
#65
06
01
14
b110 2
1)
1&
#70
b1 '
b1 *
b1 :
b100001 <
b1 =
0)
0&
#75
b0 5
06
b10 0
04
b1101 2
1)
1&
#80
b11 +
b11 .
b11 ;
b1000 '
b1000 *
b1000 :
b1000011000 <
b1000 =
0)
0&
#85
11
1)
1&
#90
b10000110001000 <
0)
0&
#95
01
14
b11011 2
1)
1&
#100
b1 +
b1 .
b1 ;
b10 '
b10 *
b10 :
b10 =
b10 <
0)
0&
#105
16
b11 0
04
b110111 2
1)
1&
#110
b100010 <
0)
0&
#115
b1 5
11
1)
1&
#120
b1000100010 <
0)
0&
#125
06
01
14
b1101110 2
1)
1&
#130
b10001000100010 <
0)
0&
#135
b0 5
06
b100 0
04
b11011101 2
1)
1&
#140
b1 '
b1 *
b1 :
b1 =
b1 <
0)
0&
#145
11
1)
1&
#150
b10001 <
0)
0&
#155
01
14
b10111010 2
1)
1&
#160
b100010001 <
0)
0&
#165
16
b101 0
04
b1110101 2
1)
1&
#170
b10 +
b10 .
b10 ;
b100 '
b100 *
b100 :
b1000100010100 <
b100 =
0)
0&
#175
b1 5
11
1)
1&
#180
b100 <
0)
0&
#185
06
01
14
b11101011 2
1)
1&
#190
b1000100 <
0)
0&
#195
b0 5
06
b110 0
04
b11010110 2
1)
1&
#200
b1 +
b1 .
b1 ;
b1 '
b1 *
b1 :
b10001000001 <
b1 =
0)
0&
#205
11
1)
1&
#210
b11 +
b11 .
b11 ;
b1000 '
b1000 *
b1000 :
b100010000011000 <
b1000 =
0)
0&
#215
01
14
b10101101 2
1)
1&
#220
b1000 <
0)
0&
#225
16
b111 0
04
b1011011 2
1)
1&
#230
b1 +
b1 .
b1 ;
b1 '
b1 *
b1 :
b10000001 <
b1 =
0)
0&
#235
b1 5
11
1)
1&
#240
b100000010001 <
0)
0&
#245
06
01
14
b10110110 2
1)
1&
#250
b10 +
b10 .
b10 ;
b100 '
b100 *
b100 :
b1000000100010100 <
b100 =
0)
0&
#255
b0 5
06
b0 0
04
b1101100 2
1)
1&
#260
b100 <
0)
0&
#265
11
1)
1&
#270
b1000100 <
0)
0&
#275
01
14
b11011001 2
1)
1&
#280
b1 +
b1 .
b1 ;
b10 '
b10 *
b10 :
b10001000010 <
b10 =
0)
0&
#285
16
b1 0
04
b10110011 2
1)
1&
#290
b10 +
b10 .
b10 ;
b100 '
b100 *
b100 :
b100010000100100 <
b100 =
0)
0&
#295
b1 5
11
1)
1&
#300
b11 +
b11 .
b11 ;
b1000 '
b1000 *
b1000 :
b1000 =
b1000 <
0)
0&
#305
06
01
14
b1100111 2
1)
1&
#310
b10001000 <
0)
0&
#315
b0 5
06
b10 0
04
b11001111 2
1)
1&
#320
b100010001000 <
0)
0&
#325
11
1)
1&
#330
b1 +
b1 .
b1 ;
b10 '
b10 *
b10 :
b1000100010000010 <
b10 =
0)
0&
#335
01
14
b10011110 2
1)
1&
#340
b10 +
b10 .
b10 ;
b100 '
b100 *
b100 :
b100 =
b100 <
0)
0&
#345
16
b11 0
04
b111100 2
1)
1&
#350
b1 +
b1 .
b1 ;
b10 '
b10 *
b10 :
b1000010 <
b10 =
0)
0&
#355
b1 5
11
1)
1&
#360
b1 '
b1 *
b1 :
b10000100001 <
b1 =
0)
0&
#365
06
01
14
b1111000 2
1)
1&
#370
b10 +
b10 .
b10 ;
b100 '
b100 *
b100 :
b100001000010100 <
b100 =
0)
0&
#375
b0 5
06
b100 0
04
b11110000 2
1)
1&
#380
b100 <
0)
0&
#385
11
1)
1&
#390
b11 +
b11 .
b11 ;
b1000 '
b1000 *
b1000 :
b1001000 <
b1000 =
0)
0&
#395
01
14
b11100001 2
1)
1&
#400
b10010001000 <
0)
0&
#405
16
b101 0
04
b11000011 2
1)
1&
#410
b100100010001000 <
0)
0&
#415
b1 5
11
1)
1&
#420
b1 +
b1 .
b1 ;
b10 '
b10 *
b10 :
b10 =
b10 <
0)
0&
#425
06
01
14
b10000110 2
1)
1&
#430
b10 +
b10 .
b10 ;
b100 '
b100 *
b100 :
b100100 <
b100 =
0)
0&
#435
b0 5
06
b110 0
04
b1100 2
1)
1&
#440
b11 +
b11 .
b11 ;
b1000 '
b1000 *
b1000 :
b1001001000 <
b1000 =
0)
0&
#445
11
1)
1&
#450
b10 +
b10 .
b10 ;
b100 '
b100 *
b100 :
b10010010000100 <
b100 =
0)
0&
#455
01
14
b11001 2
1)
1&
#460
b1 +
b1 .
b1 ;
b10 '
b10 *
b10 :
b10 =
b10 <
0)
0&
#465
16
b111 0
04
b110011 2
1)
1&
#470
b10 +
b10 .
b10 ;
b100 '
b100 *
b100 :
b100100 <
b100 =
0)
0&
#475
b1 5
11
1)
1&
#480
b1 +
b1 .
b1 ;
b10 '
b10 *
b10 :
b1001000010 <
b10 =
0)
0&
#485
06
01
14
b1100110 2
1)
1&
#490
b10010000100010 <
0)
0&
#495
b0 5
06
b0 0
04
b11001101 2
1)
1&
#500
b10 +
b10 .
b10 ;
b100 '
b100 *
b100 :
b100 =
b100 <
0)
0&
#505
11
1)
1&
#510
b11 +
b11 .
b11 ;
b1000 '
b1000 *
b1000 :
b1001000 <
b1000 =
0)
0&
#515
01
14
b10011011 2
1)
1&
#520
b1 +
b1 .
b1 ;
b1 '
b1 *
b1 :
b10010000001 <
b1 =
0)
0&
#525
16
b1 0
04
b110111 2
1)
1&
#530
b100100000010001 <
0)
0&
#535
b1 5
11
1)
1&
#540
b10 '
b10 *
b10 :
b10 =
b10 <
0)
0&
#545
06
01
14
b1101110 2
1)
1&
#550
b10 +
b10 .
b10 ;
b100 '
b100 *
b100 :
b100100 <
b100 =
0)
0&
#555
b0 5
06
b10 0
04
b11011100 2
1)
1&
#560
b1 +
b1 .
b1 ;
b10 '
b10 *
b10 :
b1001000010 <
b10 =
0)
0&
#565
11
1)
1&
#570
b10 +
b10 .
b10 ;
b100 '
b100 *
b100 :
b10010000100100 <
b100 =
0)
0&
#575
01
14
b10111001 2
1)
1&
#580
b1 +
b1 .
b1 ;
b1 '
b1 *
b1 :
b1 =
b1 <
0)
0&
#585
16
b11 0
04
b1110011 2
1)
1&
#590
b10001 <
0)
0&
#595
b1 5
11
1)
1&
#600
b100010001 <
0)
0&
#605
06
01
14
b11100110 2
1)
1&
#610
b1000100010001 <
0)
0&
#615
b0 5
06
b100 0
04
b11001101 2
1)
1&
#620
b10 +
b10 .
b10 ;
b100 '
b100 *
b100 :
b100 =
b100 <
0)
0&
#625
11
1)
1&
#630
b1 +
b1 .
b1 ;
b10 '
b10 *
b10 :
b1000010 <
b10 =
0)
0&
#635
01
14
b10011010 2
1)
1&
#640
b11 +
b11 .
b11 ;
b1000 '
b1000 *
b1000 :
b10000101000 <
b1000 =
0)
0&
#645
16
b101 0
04
b110101 2
1)
1&
#650
b100001010001000 <
0)
0&
#655
b1 5
11
1)
1&
#660
b1 +
b1 .
b1 ;
b1 '
b1 *
b1 :
b1 =
b1 <
0)
0&
#665
06
01
14
b1101010 2
1)
1&
#670
b10 '
b10 *
b10 :
b10010 <
b10 =
0)
0&
#675
b0 5
06
b110 0
04
b11010101 2
1)
1&
#680
b11 +
b11 .
b11 ;
b1000 '
b1000 *
b1000 :
b100101000 <
b1000 =
0)
0&
#685
11
1)
1&
#690
b1 +
b1 .
b1 ;
b10 '
b10 *
b10 :
b1001010000010 <
b10 =
0)
0&
#695
01
14
b10101010 2
1)
1&
#700
b11 +
b11 .
b11 ;
b1000 '
b1000 *
b1000 :
b1000 =
b1000 <
0)
0&
#705
16
b111 0
04
b1010101 2
1)
1&
#710
b1 +
b1 .
b1 ;
b10 '
b10 *
b10 :
b10000010 <
b10 =
0)
0&
#715
b1 5
11
1)
1&
#720
b1 '
b1 *
b1 :
b100000100001 <
b1 =
0)
0&
#725
06
01
14
b10101010 2
1)
1&
#730
b1000001000010001 <
0)
0&
#735
b0 5
06
b0 0
04
b1010101 2
1)
1&
#740
b10 '
b10 *
b10 :
b10 =
b10 <
0)
0&
#745
11
1)
1&
#750
b100010 <
0)
0&
#755
01
14
b10101010 2
1)
1&
#760
b1 '
b1 *
b1 :
b1000100001 <
b1 =
0)
0&
#765
16
b1 0
04
b1010101 2
1)
1&
#770
b10001000010001 <
0)
0&
#775
b1 5
11
1)
1&
#780
b1 <
0)
0&
#785
06
01
14
b10101010 2
1)
1&
#790
b10 +
b10 .
b10 ;
b100 '
b100 *
b100 :
b10100 <
b100 =
0)
0&
#795
b0 5
06
b10 0
04
b1010100 2
1)
1&
#800
b101000100 <
0)
0&
#805
11
1)
1&
#810
b11 +
b11 .
b11 ;
b1000 '
b1000 *
b1000 :
b1010001001000 <
b1000 =
0)
0&
#815
01
14
b10101001 2
1)
1&
#820
b1000 <
0)
0&
#825
16
b11 0
04
b1010011 2
1)
1&
#830
b1 +
b1 .
b1 ;
b1 '
b1 *
b1 :
b10000001 <
b1 =
0)
0&
#835
b1 5
11
1)
1&
#840
b11 +
b11 .
b11 ;
b1000 '
b1000 *
b1000 :
b100000011000 <
b1000 =
0)
0&
#845
06
01
14
b10100111 2
1)
1&
#850
b10 +
b10 .
b10 ;
b100 '
b100 *
b100 :
b1000000110000100 <
b100 =
0)
0&
#855
b0 5
06
b100 0
04
b1001110 2
1)
1&
#860
b100 <
0)
0&
#865
11
1)
1&
#870
b11 +
b11 .
b11 ;
b1000 '
b1000 *
b1000 :
b1001000 <
b1000 =
0)
0&
#875
01
14
b10011101 2
1)
1&
#880
b1 +
b1 .
b1 ;
b1 '
b1 *
b1 :
b10010000001 <
b1 =
0)
0&
#885
16
b101 0
04
b111011 2
1)
1&
#890
b10 '
b10 *
b10 :
b100100000010010 <
b10 =
0)
0&
#895
b1 5
11
1)
1&
#900
b10 +
b10 .
b10 ;
b100 '
b100 *
b100 :
b100 =
b100 <
0)
0&
#905
06
01
14
b1110111 2
1)
1&
#910
b1 +
b1 .
b1 ;
b1 '
b1 *
b1 :
b1000001 <
b1 =
0)
0&
#915
b0 5
06
b110 0
04
b11101111 2
1)
1&
#920
b11 +
b11 .
b11 ;
b1000 '
b1000 *
b1000 :
b10000011000 <
b1000 =
0)
0&
#925
11
1)
1&
#930
b1 +
b1 .
b1 ;
b10 '
b10 *
b10 :
b100000110000010 <
b10 =
0)
0&
#935
01
14
b11011110 2
1)
1&
#940
b10 <
0)
0&
#945
16
b111 0
04
b10111101 2
1)
1&
#950
b11 +
b11 .
b11 ;
b1000 '
b1000 *
b1000 :
b101000 <
b1000 =
0)
0&
#955
b1 5
11
1)
1&
#960
b1 +
b1 .
b1 ;
b10 '
b10 *
b10 :
b1010000010 <
b10 =
0)
0&
#965
06
01
14
b1111010 2
1)
1&
#970
b10100000100010 <
0)
0&
#975
b0 5
06
b0 0
04
b11110101 2
1)
1&
#980
0)
0&
